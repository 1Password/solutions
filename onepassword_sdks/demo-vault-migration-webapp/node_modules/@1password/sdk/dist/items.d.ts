import { InnerClient } from "./core.js";
import { SdkIterable } from "./iterator.js";
import { Item, ItemCreateParams, ItemOverview } from "./types.js";
import { ItemsSharesApi } from "./items_shares.js";
import { ItemsFilesApi } from "./items_files.js";
/**
 * The Items API holds all operations the SDK client can perform on 1Password items.
 */
export interface ItemsApi {
    shares: ItemsSharesApi;
    files: ItemsFilesApi;
    /**
     * Create a new item.
     */
    create(params: ItemCreateParams): Promise<Item>;
    /**
     * Get an item by vault and item ID
     */
    get(vaultId: string, itemId: string): Promise<Item>;
    /**
     * Update an existing item.
     */
    put(item: Item): Promise<Item>;
    /**
     * Delete an item.
     */
    delete(vaultId: string, itemId: string): any;
    /**
     * Archive an item.
     */
    archive(vaultId: string, itemId: string): any;
    /**
     * List all items
     */
    listAll(vaultId: string): Promise<SdkIterable<ItemOverview>>;
}
export declare class Items implements ItemsApi {
    #private;
    shares: ItemsSharesApi;
    files: ItemsFilesApi;
    constructor(inner: InnerClient);
    /**
     * Create a new item.
     */
    create(params: ItemCreateParams): Promise<Item>;
    /**
     * Get an item by vault and item ID
     */
    get(vaultId: string, itemId: string): Promise<Item>;
    /**
     * Update an existing item.
     */
    put(item: Item): Promise<Item>;
    /**
     * Delete an item.
     */
    delete(vaultId: string, itemId: string): Promise<void>;
    /**
     * Archive an item.
     */
    archive(vaultId: string, itemId: string): Promise<void>;
    /**
     * List all items
     */
    listAll(vaultId: string): Promise<SdkIterable<ItemOverview>>;
}

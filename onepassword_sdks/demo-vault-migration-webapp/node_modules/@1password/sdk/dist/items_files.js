"use strict";
// Code generated by op-codegen - DO NOT EDIT MANUALLY
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ItemsFiles_inner;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemsFiles = void 0;
const types_js_1 = require("./types.js");
class ItemsFiles {
    constructor(inner) {
        _ItemsFiles_inner.set(this, void 0);
        __classPrivateFieldSet(this, _ItemsFiles_inner, inner, "f");
    }
    /**
     * Attach files to Items
     */
    attach(item, fileParams) {
        return __awaiter(this, void 0, void 0, function* () {
            const invocationConfig = {
                invocation: {
                    clientId: __classPrivateFieldGet(this, _ItemsFiles_inner, "f").id,
                    parameters: {
                        name: "ItemsFilesAttach",
                        parameters: {
                            item,
                            file_params: fileParams,
                        },
                    },
                },
            };
            return JSON.parse(yield __classPrivateFieldGet(this, _ItemsFiles_inner, "f").core.invoke(invocationConfig), types_js_1.ReviverFunc);
        });
    }
    /**
     * Read file content from the Item
     */
    read(vaultId, itemId, attr) {
        return __awaiter(this, void 0, void 0, function* () {
            const invocationConfig = {
                invocation: {
                    clientId: __classPrivateFieldGet(this, _ItemsFiles_inner, "f").id,
                    parameters: {
                        name: "ItemsFilesRead",
                        parameters: {
                            vault_id: vaultId,
                            item_id: itemId,
                            attr,
                        },
                    },
                },
            };
            return JSON.parse(yield __classPrivateFieldGet(this, _ItemsFiles_inner, "f").core.invoke(invocationConfig), types_js_1.ReviverFunc);
        });
    }
    /**
     * Delete a field file from Item using the section and field IDs
     */
    delete(item, sectionId, fieldId) {
        return __awaiter(this, void 0, void 0, function* () {
            const invocationConfig = {
                invocation: {
                    clientId: __classPrivateFieldGet(this, _ItemsFiles_inner, "f").id,
                    parameters: {
                        name: "ItemsFilesDelete",
                        parameters: {
                            item,
                            section_id: sectionId,
                            field_id: fieldId,
                        },
                    },
                },
            };
            return JSON.parse(yield __classPrivateFieldGet(this, _ItemsFiles_inner, "f").core.invoke(invocationConfig), types_js_1.ReviverFunc);
        });
    }
    /**
     * Replace the document file within a document item
     */
    replaceDocument(item, docParams) {
        return __awaiter(this, void 0, void 0, function* () {
            const invocationConfig = {
                invocation: {
                    clientId: __classPrivateFieldGet(this, _ItemsFiles_inner, "f").id,
                    parameters: {
                        name: "ItemsFilesReplaceDocument",
                        parameters: {
                            item,
                            doc_params: docParams,
                        },
                    },
                },
            };
            return JSON.parse(yield __classPrivateFieldGet(this, _ItemsFiles_inner, "f").core.invoke(invocationConfig), types_js_1.ReviverFunc);
        });
    }
}
exports.ItemsFiles = ItemsFiles;
_ItemsFiles_inner = new WeakMap();
